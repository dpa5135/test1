from IPython.display import display, HTML
import re

def highlight_matches(df, text_col='UTR_text', pattern_theme='customer_behavior', n=10):
    """
    Prints sample texts with highlighted direct matches for a given pattern theme.
    Works inside Jupyter Notebooks (HTML rendering).

    Parameters:
    -----------
    df : pd.DataFrame
        DataFrame with text and direct_match columns
    text_col : str
        Column name containing UTR text
    pattern_theme : str
        Name of the pattern theme to visualize (e.g., 'structuring', 'utr_reporting_references')
    n : int
        Number of records to display
    """
    direct_col = f'direct_match_{pattern_theme}'
    context_col = f'context_match_{pattern_theme}'

    if direct_col not in df.columns:
        print(f"‚ùå Column {direct_col} not found ‚Äî run detection first or check pattern name.")
        return

    subset = df[[text_col, direct_col]].head(n)

    html_output = ""
    for i, row in subset.iterrows():
        text = str(row[text_col])
        matches = row[direct_col]
        if not matches:
            colored_text = text
        else:
            colored_text = text
            # Highlight each match in yellow
            for match in sorted(matches, key=len, reverse=True):
                pattern = re.escape(match)
                colored_text = re.sub(
                    pattern,
                    f"<mark style='background-color: #fff176; color:black; font-weight:bold;'>{match}</mark>",
                    colored_text,
                    flags=re.IGNORECASE
                )

        html_output += f"<p><b>üü© Record {i+1}:</b><br>{colored_text}</p><hr>"

    display(HTML(html_output))


highlight_matches(
    df[df['structuring']=='Yes'],
    text_col="UTR_text",
    pattern_theme="structuring",  # or 'financial_corporate_crimes'
    n=10
)
