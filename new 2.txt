import os
import re
import pandas as pd
from PyPDF2 import PdfReader
from openpyxl import load_workbook
import fitz  # PyMuPDF for hyperlink extraction

# === CONFIGURATION ===
pdf_folder = r"D:\Path\To\Your\PDFs"   # Change this to your folder path
output_file = "activity_summary_results.xlsx"

# === FUNCTION: Extract hyperlinks from PDF ===
def extract_hyperlinks(pdf_path):
    links = []
    with fitz.open(pdf_path) as doc:
        for page in doc:
            for link in page.get_links():
                uri = link.get("uri", "")
                if uri:
                    links.append(uri)
    return links

# === FUNCTION: Extract Excel summary text ===
def extract_summary_from_excel(excel_path):
    try:
        wb = load_workbook(excel_path, data_only=True)
        ws = wb.active
        text_values = []
        for row in ws.iter_rows(min_row=39, max_row=41, min_col=3, max_col=9):
            for cell in row:
                if cell.value:
                    text_values.append(str(cell.value))
        return " ".join(text_values).strip()
    except Exception as e:
        return f"Error reading Excel: {e}"

# === FUNCTION: Extract text summary directly from PDF ===
def extract_summary_from_pdf(pdf_path):
    try:
        reader = PdfReader(pdf_path)
        text = ""
        for page in reader.pages:
            text += page.extract_text() or ""
        # Look for typical phrases or specific known patterns
        match = re.search(r"(Account\s+Closeout|Summary\s+of\s+Activity[:\-]?\s*.+)", text, re.IGNORECASE)
        if match:
            return match.group(0).strip()
        return None
    except Exception as e:
        return f"Error reading PDF: {e}"

# === MAIN LOGIC ===
results = []

for file in os.listdir(pdf_folder):
    if file.lower().endswith(".pdf"):
        pdf_path = os.path.join(pdf_folder, file)
        print(f"Processing: {file}")

        summary = None
        # Step 1: Extract hyperlinks and check for UTR Excel
        links = extract_hyperlinks(pdf_path)
        utr_links = [l for l in links if l.lower().endswith(".xlsx") and "utr" in l.lower()]

        if utr_links:
            excel_path = utr_links[0]  # Take first UTR link
            summary = extract_summary_from_excel(excel_path)

        # Step 2: If no hyperlink or failed, extract directly from PDF text
        if not summary or "Error" in summary or summary.strip() == "":
            pdf_summary = extract_summary_from_pdf(pdf_path)
            if pdf_summary:
                summary = pdf_summary

        # Step 3: Default if nothing found
        if not summary or summary.strip() == "":
            summary = "Not found"

        results.append({"PDF_File_Name": file, "Activity_Summary": summary})

# === SAVE RESULTS ===
df = pd.DataFrame(results)
df.to_excel(output_file, index=False)
print(f"\nâœ… Extraction complete! Results saved to {output_file}")
