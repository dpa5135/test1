import os
import pandas as pd
import subprocess

# === CONFIGURATION ===
base_folder = r"C:\Users\TAQ7353\UTR\LOB_ActivitySummary_FillingRate\test"
output_combined = os.path.join(base_folder, "activity_summary_results_Combined.xlsx")

# Paths for your two working scripts
embedded_script = os.path.join(base_folder, "extract_embedded_excel.py")
camelot_script = os.path.join(base_folder, "extract_camelot_summary.py")

# The outputs that your existing scripts already generate
embedded_output = os.path.join(base_folder, "activity_summary_results_PDFvExcel.xlsx")
camelot_output = os.path.join(base_folder, "SummaryOfActivity_Results.xlsx")

# === STEP 1Ô∏è‚É£: Run your embedded Excel extractor exactly as-is ===
print("\n‚ñ∂ Running embedded Excel extraction...")
subprocess.run(["python", embedded_script], check=False)

# === STEP 2Ô∏è‚É£: Run your Camelot parser exactly as-is ===
print("\n‚ñ∂ Running Camelot table extraction for remaining PDFs...")
subprocess.run(["python", camelot_script], check=False)

# === STEP 3Ô∏è‚É£: Combine results ===
print("\n‚ñ∂ Combining both results...")

df_all = pd.DataFrame()

if os.path.exists(embedded_output):
    df_emb = pd.read_excel(embedded_output)
    df_emb.columns = [c.strip() for c in df_emb.columns]
    df_all = pd.concat([df_all, df_emb], ignore_index=True)

if os.path.exists(camelot_output):
    df_cam = pd.read_excel(camelot_output)
    df_cam.columns = [c.strip() for c in df_cam.columns]
    df_all = pd.concat([df_all, df_cam], ignore_index=True)

# Deduplicate by PDF file name, keeping the first found summary
if not df_all.empty:
    df_all = df_all.drop_duplicates(subset=["PDF_File_Name", "PDF_File"], keep="first")

# Normalize column names for consistency
for possible in ["PDF_File", "PDF_File_Name"]:
    if possible in df_all.columns:
        df_all.rename(columns={possible: "PDF_File_Name"}, inplace=True)
if "Activity_Summary" not in df_all.columns and "Summary_of_Activity" in df_all.columns:
    df_all.rename(columns={"Summary_of_Activity": "Activity_Summary"}, inplace=True)

# Sort for readability
df_all.sort_values(by="PDF_File_Name", inplace=True, ignore_index=True)

# Save unified result
df_all.to_excel(output_combined, index=False)

print(f"\n‚úÖ Combined extraction complete!")
print(f"üíæ Final results saved to: {output_combined}")
