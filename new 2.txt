import os
import re
import pandas as pd
import tabula

# === CONFIGURATION ===
pdf_folder = r"D:\Path\To\Your\PDFs"          # 🔸 Folder where your PDFs are stored
converted_folder = r"D:\Path\To\ConvertedCSVs"  # 🔸 Folder to save converted CSVs
output_file = "activity_summary_results.xlsx"   # 🔸 Final summary output file

# Create output folders if not exist
os.makedirs(converted_folder, exist_ok=True)

def convert_pdf_to_csv(pdf_path, csv_path):
    """
    Convert PDF (generated by Excel) to CSV using Tabula.
    Requires Java installed and in PATH.
    """
    try:
        tabula.convert_into(pdf_path, csv_path, output_format="csv", pages="all")
        return True
    except Exception as e:
        print(f"❌ Conversion failed for {pdf_path}: {e}")
        return False

def extract_summary_from_csv(csv_path):
    """
    After PDF -> CSV, read the CSV and find the cell 'Summary of Activity'
    then take the next non-empty line as the summary text.
    """
    try:
        df = pd.read_csv(csv_path, header=None, dtype=str, on_bad_lines="skip").fillna("")

        # Flatten everything into a list of strings (reading row by row)
        flat_values = [str(cell).strip() for row in df.values for cell in row if str(cell).strip() != ""]

        # Search for 'Summary of Activity'
        for i, val in enumerate(flat_values):
            if re.search(r"\bsummary\s+of\s+activity\b", val, re.IGNORECASE):
                # Look for the next non-empty text
                for j in range(i + 1, len(flat_values)):
                    nxt = flat_values[j].strip()
                    if nxt:
                        return nxt
        return "Not found"

    except Exception as e:
        return f"Error parsing CSV: {e}"

# === MAIN PROCESS ===
results = []

for file in os.listdir(pdf_folder):
    if not file.lower().endswith(".pdf"):
        continue

    pdf_path = os.path.join(pdf_folder, file)
    csv_path = os.path.join(converted_folder, file.replace(".pdf", ".csv"))

    print(f"Processing: {file}")

    # Step 1 — Convert PDF to CSV
    converted = convert_pdf_to_csv(pdf_path, csv_path)
    if not converted:
        results.append({"PDF_File_Name": file, "Activity_Summary": "Error converting PDF"})
        continue

    # Step 2 — Extract the summary text from CSV
    summary = extract_summary_from_csv(csv_path)

    # Step 3 — Add to results list
    results.append({"PDF_File_Name": file, "Activity_Summary": summary})

# === SAVE RESULTS TO EXCEL ===
df = pd.DataFrame(results)
df.to_excel(output_file, index=False)

print(f"\n✅ Extraction complete! Results saved to {output_file}")
